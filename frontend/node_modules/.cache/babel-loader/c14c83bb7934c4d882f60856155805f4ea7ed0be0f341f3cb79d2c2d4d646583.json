{"ast":null,"code":"// import React, { useState ,useCallback, useContext} from \"react\";\n// import { Container, Row, Col, Form, FormGroup, Button } from 'reactstrap';\n// import axios from 'axios';\n// import \"./login.css\"\n// import RegisterPhoto from \"../assets/images/register.jpg\"\n// import RegisterTitle from \"../assets/images/registerTitle.png\"\n// import { Link, useNavigate } from \"react-router-dom\";\n// import {AuthContext} from './../context/AuthContext.js'\n// import {BASE_URL} from './../utils/config.js';\n\n// const Register = () => {\n//     const navigate = useNavigate();\n//     const [credentials, setCredentials] = useState({\n//         username: '',\n//         email: '',\n//         password: ''\n//     });\n//     const {dispatch}=useContext(AuthContext)\n//     const [emailError, setEmailError] = useState('');\n\n//     const handleChange = e => {\n//         setCredentials(prev => ({ ...prev, [e.target.id]: e.target.value }));\n//     };\n\n//     const validateEmail = email => {\n//         const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n//         return emailPattern.test(email);\n//     };\n\n//     const handleClick = async e => {\n//         e.preventDefault();\n//         if (!validateEmail(credentials.email)) {\n//             setEmailError('Please enter a valid email address.');\n//             return;\n//         }\n//         setEmailError('');\n//         try {\n//             const response = await axios.post('http://localhost:5000/register', credentials);\n//             alert(\"Registration successful\");\n//             navigate(\"/login\");\n//         } catch (error) {\n//             console.error('There was an error registering!', error);\n//             alert('Registration failed!');\n//         }\n//     };\n\n//     // const handleClick = async (e) => {\n//     //     e.preventDefault();\n\n//     //     // const userData = {\n//     //     //   username: 'exampleUser', // Example data, replace with actual input values\n//     //     //   password: 'examplePassword',\n//     //     //   email: 'example@example.com'\n//     //     // };\n\n//     //     try {\n//     //       const res = await fetch(`${BASE_URL}/auth/register`, {\n//     //         method: 'POST',\n//     //         headers: {\n//     //           'content-Type': 'application/json',\n//     //         },\n//     //         body: JSON.stringify(credentials), // Send user data in the request body\n//     //       });\n//     //       const result=await res.json();\n//     //       // Check if the response is ok\n//     //       if (!res.ok) {\n//     //         alert(result.message)\n//     //       }\n//     //       dispatch({type:'ReGISTER_SUCCESS'})\n//     //       navigate('/login')\n//     //     //   const data = await res.json();\n//     //     //   console.log(\"Registration successful\", data);\n\n//     //     } catch (error) {\n//     //       alert(err.message);\n//     //     }\n//     //   };\n\n//     return (\n//         <Container className=\"login-container\">\n//             <Row>\n//                 <Col lg='6' className=\"photo-side\">\n//                     <img src={RegisterPhoto} alt=\"Login Visual\" className=\"login-photo\"\n//                         style={{ height: \"500px\", width: \"500px\", position: \"relative\", left: \"-100px\" }} />\n//                 </Col>\n//                 <Col lg='8' className=\"form-side m-auto\">\n//                     <img src={RegisterTitle} alt=\"Login Visual\" className=\"login-photo\" />\n//                     <Form onSubmit={handleClick} className=\"login-form\">\n//                         <FormGroup>\n//                             <input type=\"text\" placeholder=\"Username\" required id=\"username\" onChange={handleChange} />\n//                         </FormGroup>\n//                         <FormGroup>\n//                             <input type=\"email\" placeholder=\"Email\" required id=\"email\" onChange={handleChange} />\n//                             {emailError && <p style={{ color: 'red' }}>{emailError}</p>}\n//                         </FormGroup>\n//                         <FormGroup>\n//                             <input type=\"password\" placeholder=\"Password\" required id=\"password\" onChange={handleChange} />\n//                         </FormGroup>\n//                         <Button type=\"submit\" className=\"login-button\">Register</Button>\n//                         <p>Already have an account?<Link to=\"/login\">Login</Link></p>\n//                     </Form>\n//                 </Col>\n//             </Row>\n//         </Container>\n//     );\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["C:/Users/91972/Desktop/5sem/BEE/tour-management/frontend/src/pages/Register.jsx"],"sourcesContent":["// import React, { useState ,useCallback, useContext} from \"react\";\r\n// import { Container, Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\n// import axios from 'axios';\r\n// import \"./login.css\"\r\n// import RegisterPhoto from \"../assets/images/register.jpg\"\r\n// import RegisterTitle from \"../assets/images/registerTitle.png\"\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import {AuthContext} from './../context/AuthContext.js'\r\n// import {BASE_URL} from './../utils/config.js';\r\n\r\n// const Register = () => {\r\n//     const navigate = useNavigate();\r\n//     const [credentials, setCredentials] = useState({\r\n//         username: '',\r\n//         email: '',\r\n//         password: ''\r\n//     });\r\n//     const {dispatch}=useContext(AuthContext)\r\n//     const [emailError, setEmailError] = useState('');\r\n\r\n//     const handleChange = e => {\r\n//         setCredentials(prev => ({ ...prev, [e.target.id]: e.target.value }));\r\n//     };\r\n\r\n//     const validateEmail = email => {\r\n//         const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n//         return emailPattern.test(email);\r\n//     };\r\n\r\n//     const handleClick = async e => {\r\n//         e.preventDefault();\r\n//         if (!validateEmail(credentials.email)) {\r\n//             setEmailError('Please enter a valid email address.');\r\n//             return;\r\n//         }\r\n//         setEmailError('');\r\n//         try {\r\n//             const response = await axios.post('http://localhost:5000/register', credentials);\r\n//             alert(\"Registration successful\");\r\n//             navigate(\"/login\");\r\n//         } catch (error) {\r\n//             console.error('There was an error registering!', error);\r\n//             alert('Registration failed!');\r\n//         }\r\n//     };\r\n    \r\n//     // const handleClick = async (e) => {\r\n//     //     e.preventDefault();\r\n      \r\n//     //     // const userData = {\r\n//     //     //   username: 'exampleUser', // Example data, replace with actual input values\r\n//     //     //   password: 'examplePassword',\r\n//     //     //   email: 'example@example.com'\r\n//     //     // };\r\n      \r\n//     //     try {\r\n//     //       const res = await fetch(`${BASE_URL}/auth/register`, {\r\n//     //         method: 'POST',\r\n//     //         headers: {\r\n//     //           'content-Type': 'application/json',\r\n//     //         },\r\n//     //         body: JSON.stringify(credentials), // Send user data in the request body\r\n//     //       });\r\n//     //       const result=await res.json();\r\n//     //       // Check if the response is ok\r\n//     //       if (!res.ok) {\r\n//     //         alert(result.message)\r\n//     //       }\r\n//     //       dispatch({type:'ReGISTER_SUCCESS'})\r\n//     //       navigate('/login')\r\n//     //     //   const data = await res.json();\r\n//     //     //   console.log(\"Registration successful\", data);\r\n          \r\n//     //     } catch (error) {\r\n//     //       alert(err.message);\r\n//     //     }\r\n//     //   };\r\n      \r\n//     return (\r\n//         <Container className=\"login-container\">\r\n//             <Row>\r\n//                 <Col lg='6' className=\"photo-side\">\r\n//                     <img src={RegisterPhoto} alt=\"Login Visual\" className=\"login-photo\"\r\n//                         style={{ height: \"500px\", width: \"500px\", position: \"relative\", left: \"-100px\" }} />\r\n//                 </Col>\r\n//                 <Col lg='8' className=\"form-side m-auto\">\r\n//                     <img src={RegisterTitle} alt=\"Login Visual\" className=\"login-photo\" />\r\n//                     <Form onSubmit={handleClick} className=\"login-form\">\r\n//                         <FormGroup>\r\n//                             <input type=\"text\" placeholder=\"Username\" required id=\"username\" onChange={handleChange} />\r\n//                         </FormGroup>\r\n//                         <FormGroup>\r\n//                             <input type=\"email\" placeholder=\"Email\" required id=\"email\" onChange={handleChange} />\r\n//                             {emailError && <p style={{ color: 'red' }}>{emailError}</p>}\r\n//                         </FormGroup>\r\n//                         <FormGroup>\r\n//                             <input type=\"password\" placeholder=\"Password\" required id=\"password\" onChange={handleChange} />\r\n//                         </FormGroup>\r\n//                         <Button type=\"submit\" className=\"login-button\">Register</Button>\r\n//                         <p>Already have an account?<Link to=\"/login\">Login</Link></p>\r\n//                     </Form>\r\n//                 </Col>\r\n//             </Row>\r\n//         </Container>\r\n//     );\r\n// };\r\n\r\n// export default Register;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}